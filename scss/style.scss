body{ background: black; color: #fff; }

// -- Clearfix -- //
// @extend .clearfix
.clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}



// -- Equal Spaced Columns -- //
// Number of Columns - First Column
// Remaining Number of Columns * Margin Spacing
// Container Width - Total Margin Spacing
// Remaining Width / Total Number of Columns

@mixin equalSpaced( $num_of_cols, $spacing, $container_width  ){
  
  width: ( $container_width - ( $spacing * ($num_of_cols - 1) ) ) / $num_of_cols;
  margin-left: $spacing;
  float:left;
  margin-top: $spacing;
  
  // Remove Spacing from First Child
  &:first-child{
    margin-left: 0;
  }
  
  // When there's more than one row of columns
  
  // Remove margin-left of the first element in the row.
  &:nth-child( #{$num_of_cols}n + 1){
    margin-left: 0;
  }
  
  // Top Row Remove Margin Top
  @for $i from 1 through $num_of_cols {
      &:nth-child(#{$i}) {
          margin-top: 0;
      }
  }

  
}





.container{
  max-width: 800px;
  margin: 5% auto;
}


.col-container{
  background: black;
  @extend .clearfix;
}



// Col 2 Usage
.col-2{
  background: #fff;
  height: 100px;
  float: left;
  // equalSpaced( $num_of_cols, $spacing, $width  )
  @include equalSpaced(2, 5%, 100%);
}


// Col 2 Usage
.col-3{
  background: #fff;
  height: 100px;
  float: left;
  // equalSpaced( $num_of_cols, $spacing, $width  )
  @include equalSpaced(3, 1%, 100%);
}



// -- Responsive Usage -- //
// Col 4 Usage
.col-4{
  background: red;
  height: 100px;
  margin-top: 5%;
  
  // Start Floating Columns
  @media screen and (min-width: 500px){
    float: left;
  }
  
  // 2 Columns from 500px - 800px
  @media screen and (min-width: 500px) and (max-width: 799px){
    // equalSpaced( $num_of_cols, $spacing, $width  )
    @include equalSpaced(2, 2%, 100%);
  }
  
  // 4 Columns starting at 800px
  @media screen and (min-width: 800px){
    // equalSpaced( $num_of_cols, $spacing, $width  )
    @include equalSpaced(4, 2%, 100%);
  }
  
  
}
